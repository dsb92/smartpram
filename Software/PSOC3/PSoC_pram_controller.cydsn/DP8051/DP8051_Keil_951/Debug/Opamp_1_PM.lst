C51 COMPILER V9.51   OPAMP_1_PM                                                            12/19/2013 21:53:11 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE OPAMP_1_PM
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\Opamp_1_PM.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\Opamp_1_PM.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\Opamp_1_PM.lst) CD 
                    -DB NOIP OT(2,SIZE) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\Opamp_1_PM.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: Opamp_1_PM.c
   3          * Version 1.90
   4          *
   5          * Description:
   6          *  This file provides the power management source code to the API for the 
   7          *  OpAmp (Analog Buffer) component.
   8          *
   9          * Note:
  10          *
  11          ********************************************************************************
  12          * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  13          * You may use this file only in accordance with the license, terms, conditions, 
  14          * disclaimers, and limitations in the end user license agreement accompanying 
  15          * the software package with which this file was provided.
  16          *******************************************************************************/
  17          
  18          #include "Opamp_1.h"
  19          
  20          static Opamp_1_BACKUP_STRUCT  Opamp_1_backup;
  21          
  22          
  23          /*******************************************************************************  
  24          * Function Name: Opamp_1_SaveConfig
  25          ********************************************************************************
  26          *
  27          * Summary:
  28          *  Saves the current user configuration registers.
  29          * 
  30          * Parameters:
  31          *  void
  32          * 
  33          * Return:
  34          *  void
  35          *
  36          *******************************************************************************/
  37          void Opamp_1_SaveConfig(void) 
  38          {
  39   1          /* Nothing to save as registers are System reset on retention flops */
  40   1      }
  41          
  42          
  43          /*******************************************************************************  
  44          * Function Name: Opamp_1_RestoreConfig
  45          ********************************************************************************
  46          *
  47          * Summary:
  48          *  Restores the current user configuration registers.
  49          *
  50          * Parameters:
  51          *  void
  52          *
  53          * Return:
C51 COMPILER V9.51   OPAMP_1_PM                                                            12/19/2013 21:53:11 PAGE 2   

  54          *  void
  55          *
  56          *******************************************************************************/
  57          void Opamp_1_RestoreConfig(void) 
  58          {
  59   1          /* Nothing to restore */
  60   1      }
  61          
  62          
  63          /*******************************************************************************   
  64          * Function Name: Opamp_1_Sleep
  65          ********************************************************************************
  66          *
  67          * Summary:
  68          *  Disables block's operation and saves its configuration. Should be called 
  69          *  just prior to entering sleep.
  70          *
  71          * Parameters:
  72          *  void
  73          *
  74          * Return:
  75          *  void
  76          *
  77          * Global variables:
  78          *  Opamp_1_backup: The structure field 'enableState' is modified 
  79          *  depending on the enable state of the block before entering to sleep mode.
  80          *
  81          *******************************************************************************/
  82          void Opamp_1_Sleep(void) 
  83          {
  84   1          /* Save OpAmp enable state */
  85   1          if((Opamp_1_PM_ACT_CFG_REG & Opamp_1_ACT_PWR_EN) != 0u)
  86   1          {
  87   2              /* Component is enabled */
  88   2              Opamp_1_backup.enableState = 1u;
  89   2               /* Stops the component */
  90   2               Opamp_1_Stop();
  91   2          }
  92   1          else
  93   1          {
  94   2              /* Component is disabled */
  95   2              Opamp_1_backup.enableState = 0u;
  96   2          }
  97   1          /* Saves the configuration */
  98   1          Opamp_1_SaveConfig();
  99   1      }
 100          
 101          
 102          /*******************************************************************************  
 103          * Function Name: Opamp_1_Wakeup
 104          ********************************************************************************
 105          *
 106          * Summary:
 107          *  Enables block's operation and restores its configuration. Should be called
 108          *  just after awaking from sleep.
 109          *
 110          * Parameters:
 111          *  void
 112          *
 113          * Return:
 114          *  void
 115          *
C51 COMPILER V9.51   OPAMP_1_PM                                                            12/19/2013 21:53:11 PAGE 3   

 116          * Global variables:
 117          *  Opamp_1_backup: The structure field 'enableState' is used to 
 118          *  restore the enable state of block after wakeup from sleep mode.
 119          *
 120          *******************************************************************************/
 121          void Opamp_1_Wakeup(void) 
 122          {
 123   1          /* Restore the user configuration */
 124   1          Opamp_1_RestoreConfig();
 125   1      
 126   1          /* Enables the component operation */
 127   1          if(Opamp_1_backup.enableState == 1u)
 128   1          {
 129   2              Opamp_1_Enable();
 130   2          } /* Do nothing if component was disable before */
 131   1      }
 132          
 133          
 134          /* [] END OF FILE */
C51 COMPILER V9.51   OPAMP_1_PM                                                            12/19/2013 21:53:11 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Opamp_1_SaveConfig (BEGIN)
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 38
                                           ; SOURCE LINE # 40
0000 22                RET     
             ; FUNCTION Opamp_1_SaveConfig (END)

             ; FUNCTION Opamp_1_RestoreConfig (BEGIN)
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 58
                                           ; SOURCE LINE # 60
0000 22                RET     
             ; FUNCTION Opamp_1_RestoreConfig (END)

             ; FUNCTION Opamp_1_Sleep (BEGIN)
                                           ; SOURCE LINE # 82
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 85
0000 9043A4            MOV     DPTR,#043A4H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 5408              ANL     A,#08H
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
000B EF                MOV     A,R7
000C 4E                ORL     A,R6
000D 600B              JZ      ?C0003
                                           ; SOURCE LINE # 86
                                           ; SOURCE LINE # 88
000F 900000      R     MOV     DPTR,#Opamp_1_backup
0012 7401              MOV     A,#01H
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 90
0015 120000      E     LCALL   Opamp_1_Stop
                                           ; SOURCE LINE # 91
0018 8005              SJMP    ?C0004
001A         ?C0003:
                                           ; SOURCE LINE # 93
                                           ; SOURCE LINE # 95
001A 900000      R     MOV     DPTR,#Opamp_1_backup
001D E4                CLR     A
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 96
001F         ?C0004:
                                           ; SOURCE LINE # 98
001F 120000      R     LCALL   Opamp_1_SaveConfig
                                           ; SOURCE LINE # 99
0022 22                RET     
             ; FUNCTION Opamp_1_Sleep (END)

             ; FUNCTION Opamp_1_Wakeup (BEGIN)
                                           ; SOURCE LINE # 121
                                           ; SOURCE LINE # 122
                                           ; SOURCE LINE # 124
0000 120000      R     LCALL   Opamp_1_RestoreConfig
                                           ; SOURCE LINE # 127
0003 900000      R     MOV     DPTR,#Opamp_1_backup
0006 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   OPAMP_1_PM                                                            12/19/2013 21:53:11 PAGE 5   

0007 FF                MOV     R7,A
0008 EF                MOV     A,R7
0009 B40103            CJNE    A,#01H,?C0007
                                           ; SOURCE LINE # 128
                                           ; SOURCE LINE # 129
000C 120000      E     LCALL   Opamp_1_Enable
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 131
000F         ?C0007:
000F 22                RET     
             ; FUNCTION Opamp_1_Wakeup (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     53    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
