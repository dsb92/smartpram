C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.lst)
                    - CD DB NOIP OT(2,SIZE) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * FILENAME: cyfitter_cfg.c
   3          * PSoC Creator 3.0
   4          *
   5          * Description:
   6          * This file is automatically generated by PSoC Creator with device 
   7          * initialization code.  Except for the user defined sections in
   8          * CyClockStartupError(), this file should not be modified.
   9          *
  10          ********************************************************************************
  11          * Copyright 2013, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include <string.h>
  18          #include <cytypes.h>
  19          #include <cydevice_trm.h>
  20          #include <cyfitter.h>
  21          #include <CyLib.h>
  22          #include <cyfitter_cfg.h>
  23          
  24          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  25          
  26          
  27          #if defined(__C51__) || defined(__CX51__)
  28                  #define CYPACKED
  29                  #define CYPACKED_ATTR
  30                  #define CYALIGNED
  31                  
  32              #define CY_CFG_UNUSED
  33                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  34          
  35          
  36          
  37                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  38                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  39                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  40          #else
                      #error Unsupported toolchain
              #endif
  43          
  44          
  45          
  46          /* Clock startup error codes                                                   */
  47          #define CYCLOCKSTART_NO_ERROR    0u
  48          #define CYCLOCKSTART_XTAL_ERROR  1u
  49          #define CYCLOCKSTART_32KHZ_ERROR 2u
  50          #define CYCLOCKSTART_PLL_ERROR   3u
  51          
  52          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
  53          /*******************************************************************************
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 2   

  54          * Function Name: CyClockStartupError
  55          ********************************************************************************
  56          * Summary:
  57          *  If an error is encountered during clock configuration (crystal startup error,
  58          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  59          *  the customer, this function will stop in an infinite loop.
  60          *
  61          * Parameters:
  62          *   void
  63          *
  64          * Return:
  65          *   void
  66          *
  67          *******************************************************************************/
  68          CY_CFG_UNUSED
  69          static void CyClockStartupError(uint8 errorCode);
  70          CY_CFG_UNUSED
  71          static void CyClockStartupError(uint8 errorCode)
  72          {
  73   1          /* To remove the compiler warning if errorCode not used.                */
  74   1          errorCode = errorCode;
  75   1      
  76   1          /* `#START CyClockStartupError` */
  77   1      
  78   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc)    */
  79   1          /* we will end up here to allow the customer to implement something to  */
  80   1          /* deal with the clock condition.                                       */
  81   1      
  82   1          /* `#END` */
  83   1      
  84   1          /* If nothing else, stop here since the clocks have not started         */
  85   1          /* correctly.                                                           */
  86   1          while(1) {}
  87   1      }
  88          #endif
  89          
  90          #define cfg_byte_table ((const void CYFAR *)0x080000u)
  91          /* UDB_0_5_1_CONFIG Address: CYDEV_UCFG_B0_P7_U1_BASE Size (bytes): 128 */
  92          #define BS_UDB_0_5_1_CONFIG_VAL ((const uint8 CYFAR *)0x00080380u)
  93          
  94          /* IOPINS0_0 Address: CYREG_PRT0_DM0 Size (bytes): 8 */
  95          #define BS_IOPINS0_0_VAL ((const uint8 CYFAR *)0x00080400u)
  96          
  97          /* IOPINS0_7 Address: CYREG_PRT12_DM0 Size (bytes): 8 */
  98          #define BS_IOPINS0_7_VAL ((const uint8 CYFAR *)0x00080408u)
  99          
 100          /* IOPINS0_2 Address: CYREG_PRT2_DM0 Size (bytes): 8 */
 101          #define BS_IOPINS0_2_VAL ((const uint8 CYFAR *)0x00080410u)
 102          
 103          /* IOPINS0_4 Address: CYREG_PRT4_DM0 Size (bytes): 8 */
 104          #define BS_IOPINS0_4_VAL ((const uint8 CYFAR *)0x00080418u)
 105          
 106          /* IOPINS0_6 Address: CYREG_PRT6_DM0 Size (bytes): 8 */
 107          #define BS_IOPINS0_6_VAL ((const uint8 CYFAR *)0x00080420u)
 108          
 109          /* CYDEV_CLKDIST_ACFG0_CFG0 Address: CYREG_CLKDIST_ACFG0_CFG0 Size (bytes): 4 */
 110          #define BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL ((const uint8 CYFAR *)0x00080428u)
 111          
 112          /* PHUB_CFGMEM8 Address: CYREG_PHUB_CFGMEM8_CFG0 Size (bytes): 4 */
 113          #define BS_PHUB_CFGMEM8_VAL ((const uint8 CYFAR *)0x0008042Cu)
 114          
 115          
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 3   

 116          /*******************************************************************************
 117          * Function Name: ClockSetup
 118          ********************************************************************************
 119          *
 120          * Summary:
 121          *  Performs the initialization of all of the clocks in the device based on the
 122          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 123          *  clocks and setting the necessary dividers to produce the desired frequency. 
 124          *
 125          * Parameters:
 126          *  void
 127          *
 128          * Return:
 129          *  void
 130          *
 131          *******************************************************************************/
 132          static void ClockSetup(void);
 133          static void ClockSetup(void)
 134          {
 135   1              uint32 timeout;
 136   1              uint8 pllLock;
 137   1      
 138   1      
 139   1              /* Configure Digital Clocks based on settings from Clock DWR */
 140   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x000Bu);
 141   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG0_CFG0 + 0x2u), 0x1Cu);
 142   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x0000u);
 143   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG1_CFG0 + 0x2u), 0x50u);
 144   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG2_CFG0), 0x0003u);
 145   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG2_CFG0 + 0x2u), 0x18u);
 146   1      
 147   1              /* Configure Analog Clocks based on settings from Clock DWR */
 148   1              CYCONFIGCPY((void CYFAR *)(CYREG_CLKDIST_ACFG0_CFG0), (const void CYFAR *)(BS_CYDEV_CLKDIST_ACFG0_CFG0_VA
             -L), 4u);
 149   1      
 150   1              /* Configure ILO based on settings from Clock DWR */
 151   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x02u);
 152   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08u);
 153   1      
 154   1              /* Configure IMO based on settings from Clock DWR */
 155   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03u);
 156   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_3MHZ)));
 157   1      
 158   1              /* Configure PLL based on settings from Clock DWR */
 159   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0008u);
 160   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 161   1              /* Wait up to 250us for the PLL to lock */
 162   1              pllLock = 0u;
 163   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 164   1              { 
 165   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 166   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 167   2              }
 168   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 169   1              if (timeout == 0u)
 170   1              {
 171   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 172   2              }
 173   1      
 174   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 4   

 175   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 176   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 177   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 178   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 179   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 180   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 181   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DLY1), 0x04u);
 182   1      
 183   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG2) | 0x07u
             -)));
 184   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG1), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG1) | 0x01u
             -)));
 185   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG0), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x80u
             -)));
 186   1      }
 187          
 188          
 189          /* Analog API Functions */
 190          
 191          
 192          /*******************************************************************************
 193          * Function Name: AnalogSetDefault
 194          ********************************************************************************
 195          *
 196          * Summary:
 197          *  Sets up the analog portions of the chip to default values based on chip
 198          *  configuration options from the project.
 199          *
 200          * Parameters:
 201          *  void
 202          *
 203          * Return:
 204          *  void
 205          *
 206          *******************************************************************************/
 207          static void AnalogSetDefault(void);
 208          static void AnalogSetDefault(void)
 209          {
 210   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 211   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 212   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 213   1              CY_SET_REG8((void CYXDATA *)CYREG_PRT0_AG, 0x83u);
 214   1              CY_SET_REG8((void CYXDATA *)CYREG_PRT3_AG, 0x80u);
 215   1              CY_SET_REG8((void CYXDATA *)CYREG_BG_CR0, 0x09u);
 216   1              CY_SET_REG8((void CYXDATA *)CYREG_SC2_SW0, 0x20u);
 217   1              CY_SET_REG8((void CYXDATA *)CYREG_SC2_SW4, 0x80u);
 218   1              CY_SET_REG8((void CYXDATA *)CYREG_DAC2_SW0, 0x10u);
 219   1              CY_SET_REG8((void CYXDATA *)CYREG_CMP1_SW3, 0x40u);
 220   1              CY_SET_REG8((void CYXDATA *)CYREG_CMP1_SW4, 0x10u);
 221   1              CY_SET_REG8((void CYXDATA *)CYREG_DSM0_SW4, 0x80u);
 222   1              CY_SET_REG8((void CYXDATA *)CYREG_OPAMP3_MX, 0x21u);
 223   1              CY_SET_REG8((void CYXDATA *)CYREG_BUS_SW0, 0x80u);
 224   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 225   1      }
 226          
 227          
 228          /*******************************************************************************
 229          * Function Name: SetAnalogRoutingPumps
 230          ********************************************************************************
 231          *
 232          * Summary:
 233          * Enables or disables the analog pumps feeding analog routing switches.
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 5   

 234          * Intended to be called at startup, based on the Vdda system configuration;
 235          * may be called during operation when the user informs us that the Vdda voltage
 236          * crossed the pump threshold.
 237          *
 238          * Parameters:
 239          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 240          *
 241          * Return:
 242          *  void
 243          *
 244          *******************************************************************************/
 245          void SetAnalogRoutingPumps(uint8 enabled)
 246          {
 247   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 248   1              if (enabled != 0u)
 249   1              {
 250   2                      regValue |= 0x22u;
 251   2              }
 252   1              else
 253   1              {
 254   2                      regValue &= (uint8)~0x22u;
 255   2              }
 256   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 257   1      }
 258          
 259          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 260          /* This is an implementation detail of the AMux. Code that depends on it may be
 261             incompatible with other versions of PSoC Creator. */
 262          uint8 CYXDATA * const CYCODE AMux_1__addrTable[4] = {
 263                  (uint8 CYXDATA *)CYREG_PRT6_AG, (uint8 CYXDATA *)CYREG_DSM0_SW0, 
 264                  (uint8 CYXDATA *)CYREG_SC2_SW8, (uint8 CYXDATA *)CYREG_DSM0_SW0, 
 265          };
 266          
 267          /* This is an implementation detail of the AMux. Code that depends on it may be
 268             incompatible with other versions of PSoC Creator. */
 269          const uint8 CYCODE AMux_1__maskTable[4] = {
 270                  0x20u, 0x02u, 
 271                  0x40u, 0x40u, 
 272          };
 273          
 274          /*******************************************************************************
 275          * Function Name: AMux_1_Set
 276          ********************************************************************************
 277          * Summary:
 278          *  This function is used to set a particular channel as active on the AMux.
 279          *
 280          * Parameters:  
 281          *   channel - The mux channel input to set as active
 282          *
 283          * Return:
 284          *   void
 285          *
 286          *******************************************************************************/
 287          void AMux_1_Set(uint8 channel)
 288          {
 289   1              if (channel < 2)
 290   1              {
 291   2                      channel += channel;
 292   2                      *AMux_1__addrTable[channel] |= AMux_1__maskTable[channel];
 293   2                      channel++;
 294   2                      *AMux_1__addrTable[channel] |= AMux_1__maskTable[channel];
 295   2              }
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 6   

 296   1      }
 297          
 298          /*******************************************************************************
 299          * Function Name: AMux_1_Unset
 300          ********************************************************************************
 301          * Summary:
 302          *  This function is used to clear a particular channel from being active on the
 303          *  AMux.
 304          *
 305          * Parameters:  
 306          *   channel - The mux channel input to mark inactive
 307          *
 308          * Return:
 309          *   void
 310          *
 311          *******************************************************************************/
 312          void AMux_1_Unset(uint8 channel)
 313          {
 314   1              if (channel < 2)
 315   1              {
 316   2                      channel += channel;
 317   2                      *AMux_1__addrTable[channel] &= (uint8)~AMux_1__maskTable[channel];
 318   2                      channel++;
 319   2                      *AMux_1__addrTable[channel] &= (uint8)~AMux_1__maskTable[channel];
 320   2              }
 321   1      }
 322          
 323          
 324          
 325          /*******************************************************************************
 326          * Function Name: cyfitter_cfg
 327          ********************************************************************************
 328          * Summary:
 329          *  This function is called by the start-up code for the selected device. It
 330          *  performs all of the necessary device configuration based on the design
 331          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 332          *  as Clocks and Pins as well as any component configuration that is necessary.
 333          *
 334          * Parameters:  
 335          *   void
 336          *
 337          * Return:
 338          *   void
 339          *
 340          *******************************************************************************/
 341          
 342          void cyfitter_cfg(void)
 343          {
 344   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 345   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x05u));
 346   1      
 347   1              {
 348   2      
 349   2                      CYPACKED typedef struct {
 350   2                              void CYFAR *address;
 351   2                              uint16 size;
 352   2                      } CYPACKED_ATTR cfg_memset_t;
 353   2      
 354   2      
 355   2                      CYPACKED typedef struct {
 356   2                              void CYFAR *dest;
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 7   

 357   2                              const void CYFAR *src;
 358   2                              uint16 size;
 359   2                      } CYPACKED_ATTR cfg_memcpy_t;
 360   2      
 361   2                      static const cfg_memset_t CYCODE cfg_memset_list [] = {
 362   2                              /* address, size */
 363   2                              {(void CYFAR *)(CYREG_PRT1_DR), 16u},
 364   2                              {(void CYFAR *)(CYREG_PRT5_DR), 16u},
 365   2                              {(void CYFAR *)(CYREG_PRT15_DR), 16u},
 366   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 3712u},
 367   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P7_ROUTE_BASE), 256u},
 368   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048u},
 369   2                              {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560u},
 370   2                              {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512u},
 371   2                              {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32u},
 372   2                      };
 373   2      
 374   2                      static const cfg_memcpy_t CYCODE cfg_memcpy_list [] = {
 375   2                              /* dest, src, size */
 376   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P7_U1_BASE), BS_UDB_0_5_1_CONFIG_VAL, 128u},
 377   2                      };
 378   2      
 379   2                      uint8 CYDATA i;
 380   2      
 381   2                      /* Zero out critical memory blocks before beginning configuration */
 382   2                      for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 383   2                      {
 384   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 385   3                              CYMEMZERO(ms->address, ms->size);
 386   3                      }
 387   2      
 388   2                      /* Copy device configuration data into registers */
 389   2                      for (i = 0u; i < (sizeof(cfg_memcpy_list)/sizeof(cfg_memcpy_list[0])); i++)
 390   2                      {
 391   3                              const cfg_memcpy_t CYCODE * CYDATA mc = &cfg_memcpy_list[i];
 392   3                              void * CYDATA destPtr = mc->dest;
 393   3                              const void * CYDATA srcPtr = mc->src;
 394   3                              uint16 CYDATA numBytes = mc->size;
 395   3                              CYCONFIGCPY(destPtr, srcPtr, numBytes);
 396   3                      }
 397   2      
 398   2                      cfg_write_bytes(cfg_byte_table);
 399   2      
 400   2                      /* Perform normal device configuration. Order is not critical for these items. */
 401   2                      CY_SET_REG8((void CYXDATA *)(CYREG_DSM0_CR3), 0x0Au);
 402   2                      CYMEMZERO((void CYFAR *)(CYREG_PHUB_CFGMEM10_CFG0), 4u);
 403   2                      CYCONFIGCPY((void CYFAR *)(CYREG_PHUB_CFGMEM8_CFG0), (const void CYFAR *)(BS_PHUB_CFGMEM8_VAL), 4u);
 404   2      
 405   2                      /* Enable digital routing */
 406   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 407   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 408   2      
 409   2                      /* Enable UDB array */
 410   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 411   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 412   2              }
 413   1      
 414   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 8   

 415   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT0_DM0), (const void CYFAR *)(BS_IOPINS0_0_VAL), 8u);
 416   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT12_DM0), (const void CYFAR *)(BS_IOPINS0_7_VAL), 8u);
 417   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT2_DM0), (const void CYFAR *)(BS_IOPINS0_2_VAL), 8u);
 418   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT4_DM0), (const void CYFAR *)(BS_IOPINS0_4_VAL), 8u);
 419   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT6_DM0), (const void CYFAR *)(BS_IOPINS0_6_VAL), 8u);
 420   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01u);
 421   1      
 422   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 423   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 424   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 425   1              {
 426   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 427   2              }
 428   1      
 429   1      
 430   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 431   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 432   1              /* Setup clocks based on selections from Clock DWR */
 433   1              ClockSetup();
 434   1              /* Set Flash Cycles based on newly configured 24.00MHz Bus Clock. */
 435   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xB1u : 0x80u));
 436   1      
 437   1              /* Perform basic analog initialization to defaults */
 438   1              AnalogSetDefault();
 439   1      
 440   1              /* Configure alternate active mode */
 441   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 442   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 443   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 9   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 71
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 74
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 86
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 133
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 140
0000 7B00              MOV     R3,#00H
0002 7A40              MOV     R2,#040H
0004 7980              MOV     R1,#080H
0006 7D0B              MOV     R5,#0BH
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 141
000D 904082            MOV     DPTR,#04082H
0010 741C              MOV     A,#01CH
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 142
0013 7B00              MOV     R3,#00H
0015 7A40              MOV     R2,#040H
0017 7984              MOV     R1,#084H
0019 7D00              MOV     R5,#00H
001B 7C00              MOV     R4,#00H
001D 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 143
0020 904086            MOV     DPTR,#04086H
0023 7450              MOV     A,#050H
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 144
0026 7B00              MOV     R3,#00H
0028 7A40              MOV     R2,#040H
002A 7988              MOV     R1,#088H
002C 7D03              MOV     R5,#03H
002E 7C00              MOV     R4,#00H
0030 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 145
0033 90408A            MOV     DPTR,#0408AH
0036 7418              MOV     A,#018H
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 148
0039 7B08              MOV     R3,#08H
003B 7A04              MOV     R2,#04H
003D 7928              MOV     R1,#028H
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 10  

003F C003              PUSH    AR3
0041 C002              PUSH    AR2
0043 C001              PUSH    AR1
0045 7B00              MOV     R3,#00H
0047 7A41              MOV     R2,#041H
0049 7900              MOV     R1,#00H
004B 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
004E 120000      E     LCALL   ?C?PSTXDATA
0051 D001              POP     AR1
0053 D002              POP     AR2
0055 D003              POP     AR3
0057 7F04              MOV     R7,#04H
0059 7E00              MOV     R6,#00H
005B 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 151
005E 904300            MOV     DPTR,#04300H
0061 7402              MOV     A,#02H
0063 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 152
0064 904000            MOV     DPTR,#04000H
0067 7408              MOV     A,#08H
0069 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 155
006A 904200            MOV     DPTR,#04200H
006D 7403              MOV     A,#03H
006F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 156
0070 7B0C              MOV     R3,#0CH
0072 7A01              MOV     R2,#01H
0074 7908              MOV     R1,#08H
0076 120000      E     LCALL   _cyread8
0079 9046A1            MOV     DPTR,#046A1H
007C EF                MOV     A,R7
007D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 159
007E 7B00              MOV     R3,#00H
0080 7A42              MOV     R2,#042H
0082 7922              MOV     R1,#022H
0084 7D08              MOV     R5,#08H
0086 7C00              MOV     R4,#00H
0088 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 160
008B 7B00              MOV     R3,#00H
008D 7A42              MOV     R2,#042H
008F 7920              MOV     R1,#020H
0091 7D51              MOV     R5,#051H
0093 7C12              MOV     R4,#012H
0095 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 162
0098 900000      R     MOV     DPTR,#pllLock
009B E4                CLR     A
009C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 163
009D 7F19              MOV     R7,#019H
009F 7E00              MOV     R6,#00H
00A1 7D00              MOV     R5,#00H
00A3 7C00              MOV     R4,#00H
00A5 900000      R     MOV     DPTR,#timeout
00A8 120000      E     LCALL   ?C?LSTXDATA
00AB         ?C0004:
00AB 900000      R     MOV     DPTR,#timeout
00AE 120000      E     LCALL   ?C?LLDXDATA
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 11  

00B1 D3                SETB    C
00B2 EF                MOV     A,R7
00B3 9400              SUBB    A,#00H
00B5 EE                MOV     A,R6
00B6 9400              SUBB    A,#00H
00B8 404E              JC      ?C0005
00BA 900000      R     MOV     DPTR,#pllLock
00BD E0                MOVX    A,@DPTR
00BE FF                MOV     R7,A
00BF EF                MOV     A,R7
00C0 6403              XRL     A,#03H
00C2 6044              JZ      ?C0005
                                           ; SOURCE LINE # 164
                                           ; SOURCE LINE # 165
00C4 904225            MOV     DPTR,#04225H
00C7 E0                MOVX    A,@DPTR
00C8 FF                MOV     R7,A
00C9 EF                MOV     A,R7
00CA 5401              ANL     A,#01H
00CC FF                MOV     R7,A
00CD 7E00              MOV     R6,#00H
00CF 900000      R     MOV     DPTR,#pllLock
00D2 E0                MOVX    A,@DPTR
00D3 FE                MOV     R6,A
00D4 EE                MOV     A,R6
00D5 25E0              ADD     A,ACC
00D7 FE                MOV     R6,A
00D8 EE                MOV     A,R6
00D9 4F                ORL     A,R7
00DA FF                MOV     R7,A
00DB EF                MOV     A,R7
00DC 5403              ANL     A,#03H
00DE FF                MOV     R7,A
00DF 900000      R     MOV     DPTR,#pllLock
00E2 EF                MOV     A,R7
00E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 166
00E4 7FE0              MOV     R7,#0E0H
00E6 7E01              MOV     R6,#01H
00E8 7D00              MOV     R5,#00H
00EA 7C00              MOV     R4,#00H
00EC 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 167
00EF 900000      R     MOV     DPTR,#timeout
00F2 120000      E     LCALL   ?C?LLDXDATA
00F5 7BFF              MOV     R3,#0FFH
00F7 7AFF              MOV     R2,#0FFH
00F9 79FF              MOV     R1,#0FFH
00FB 78FF              MOV     R0,#0FFH
00FD 120000      E     LCALL   ?C?LADD
0100 900000      R     MOV     DPTR,#timeout
0103 120000      E     LCALL   ?C?LSTXDATA
0106 80A3              SJMP    ?C0004
0108         ?C0005:
                                           ; SOURCE LINE # 169
0108 900000      R     MOV     DPTR,#timeout
010B 120000      E     LCALL   ?C?LLDXDATA
010E EF                MOV     A,R7
010F 4E                ORL     A,R6
0110 7005              JNZ     ?C0007
                                           ; SOURCE LINE # 170
                                           ; SOURCE LINE # 171
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 12  

0112 7F03              MOV     R7,#03H
0114 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 172
0117         ?C0007:
                                           ; SOURCE LINE # 175
0117 7B00              MOV     R3,#00H
0119 7A40              MOV     R2,#040H
011B 7904              MOV     R1,#04H
011D 7D00              MOV     R5,#00H
011F 7C01              MOV     R4,#01H
0121 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 176
0124 904004            MOV     DPTR,#04004H
0127 7407              MOV     A,#07H
0129 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 177
012A 904006            MOV     DPTR,#04006H
012D E4                CLR     A
012E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 178
012F 904008            MOV     DPTR,#04008H
0132 7448              MOV     A,#048H
0134 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 179
0135 904004            MOV     DPTR,#04004H
0138 E4                CLR     A
0139 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 180
013A 904001            MOV     DPTR,#04001H
013D 7402              MOV     A,#02H
013F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 181
0140 90400B            MOV     DPTR,#0400BH
0143 7404              MOV     A,#04H
0145 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 183
0146 9043A2            MOV     DPTR,#043A2H
0149 E0                MOVX    A,@DPTR
014A FF                MOV     R7,A
014B EF                MOV     A,R7
014C 4407              ORL     A,#07H
014E FF                MOV     R7,A
014F 9043A2            MOV     DPTR,#043A2H
0152 EF                MOV     A,R7
0153 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 184
0154 9043A1            MOV     DPTR,#043A1H
0157 E0                MOVX    A,@DPTR
0158 FF                MOV     R7,A
0159 EF                MOV     A,R7
015A 4401              ORL     A,#01H
015C FF                MOV     R7,A
015D 9043A1            MOV     DPTR,#043A1H
0160 EF                MOV     A,R7
0161 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 185
0162 9043A0            MOV     DPTR,#043A0H
0165 E0                MOVX    A,@DPTR
0166 FF                MOV     R7,A
0167 EF                MOV     A,R7
0168 4480              ORL     A,#080H
016A FF                MOV     R7,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 13  

016B 9043A0            MOV     DPTR,#043A0H
016E EF                MOV     A,R7
016F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 186
0170 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 208
                                           ; SOURCE LINE # 209
                                           ; SOURCE LINE # 210
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 211
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 212
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 213
002F 90510D            MOV     DPTR,#0510DH
0032 7483              MOV     A,#083H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 214
0035 90513D            MOV     DPTR,#0513DH
0038 7480              MOV     A,#080H
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 215
003B 90586C            MOV     DPTR,#0586CH
003E 7409              MOV     A,#09H
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 216
0041 905A20            MOV     DPTR,#05A20H
0044 7420              MOV     A,#020H
0046 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 217
0047 905A24            MOV     DPTR,#05A24H
004A 7480              MOV     A,#080H
004C F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 14  

                                           ; SOURCE LINE # 218
004D 905A90            MOV     DPTR,#05A90H
0050 7410              MOV     A,#010H
0052 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 219
0053 905ACB            MOV     DPTR,#05ACBH
0056 7440              MOV     A,#040H
0058 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 220
0059 905ACC            MOV     DPTR,#05ACCH
005C 7410              MOV     A,#010H
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 221
005F 905B04            MOV     DPTR,#05B04H
0062 7480              MOV     A,#080H
0064 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 222
0065 905B46            MOV     DPTR,#05B46H
0068 7421              MOV     A,#021H
006A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 223
006B 905B58            MOV     DPTR,#05B58H
006E 7480              MOV     A,#080H
0070 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 224
0071 905876            MOV     DPTR,#05876H
0074 7444              MOV     A,#044H
0076 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 225
0077 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 245
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 246
                                           ; SOURCE LINE # 247
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 248
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0010
                                           ; SOURCE LINE # 249
                                           ; SOURCE LINE # 250
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4422              ORL     A,#022H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 15  

                                           ; SOURCE LINE # 251
0025 800E              SJMP    ?C0011
0027         ?C0010:
                                           ; SOURCE LINE # 253
                                           ; SOURCE LINE # 254
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54DD              ANL     A,#0DDH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 255
0035         ?C0011:
                                           ; SOURCE LINE # 256
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 257
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION _AMux_1_Set (BEGIN)
                                           ; SOURCE LINE # 287
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 288
                                           ; SOURCE LINE # 289
0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 507D              JNC     ?C0014
                                           ; SOURCE LINE # 290
                                           ; SOURCE LINE # 291
0010 900000      R     MOV     DPTR,#channel
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 900000      R     MOV     DPTR,#channel
0018 E0                MOVX    A,@DPTR
0019 2F                ADD     A,R7
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 292
001B 900000      R     MOV     DPTR,#channel
001E E0                MOVX    A,@DPTR
001F FF                MOV     R7,A
0020 EF                MOV     A,R7
0021 25E0              ADD     A,ACC
0023 2400        R     ADD     A,#LOW AMux_1__addrTable
0025 F582              MOV     DPL,A
0027 E4                CLR     A
0028 3400        R     ADDC    A,#HIGH AMux_1__addrTable
002A F583              MOV     DPH,A
002C E4                CLR     A
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 16  

002D 93                MOVC    A,@A+DPTR
002E FE                MOV     R6,A
002F 7401              MOV     A,#01H
0031 93                MOVC    A,@A+DPTR
0032 FF                MOV     R7,A
0033 8F82              MOV     DPL,R7
0035 8E83              MOV     DPH,R6
0037 C083              PUSH    DPH
0039 C082              PUSH    DPL
003B E0                MOVX    A,@DPTR
003C FF                MOV     R7,A
003D 900000      R     MOV     DPTR,#channel
0040 E0                MOVX    A,@DPTR
0041 FE                MOV     R6,A
0042 EE                MOV     A,R6
0043 900000      R     MOV     DPTR,#AMux_1__maskTable
0046 93                MOVC    A,@A+DPTR
0047 FE                MOV     R6,A
0048 EF                MOV     A,R7
0049 4E                ORL     A,R6
004A FF                MOV     R7,A
004B D082              POP     DPL
004D D083              POP     DPH
004F EF                MOV     A,R7
0050 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 293
0051 900000      R     MOV     DPTR,#channel
0054 E0                MOVX    A,@DPTR
0055 04                INC     A
0056 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 294
0057 900000      R     MOV     DPTR,#channel
005A E0                MOVX    A,@DPTR
005B FF                MOV     R7,A
005C EF                MOV     A,R7
005D 25E0              ADD     A,ACC
005F 2400        R     ADD     A,#LOW AMux_1__addrTable
0061 F582              MOV     DPL,A
0063 E4                CLR     A
0064 3400        R     ADDC    A,#HIGH AMux_1__addrTable
0066 F583              MOV     DPH,A
0068 E4                CLR     A
0069 93                MOVC    A,@A+DPTR
006A FE                MOV     R6,A
006B 7401              MOV     A,#01H
006D 93                MOVC    A,@A+DPTR
006E FF                MOV     R7,A
006F 8F82              MOV     DPL,R7
0071 8E83              MOV     DPH,R6
0073 C083              PUSH    DPH
0075 C082              PUSH    DPL
0077 E0                MOVX    A,@DPTR
0078 FF                MOV     R7,A
0079 900000      R     MOV     DPTR,#channel
007C E0                MOVX    A,@DPTR
007D FE                MOV     R6,A
007E EE                MOV     A,R6
007F 900000      R     MOV     DPTR,#AMux_1__maskTable
0082 93                MOVC    A,@A+DPTR
0083 FE                MOV     R6,A
0084 EF                MOV     A,R7
0085 4E                ORL     A,R6
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 17  

0086 FF                MOV     R7,A
0087 D082              POP     DPL
0089 D083              POP     DPH
008B EF                MOV     A,R7
008C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 295
                                           ; SOURCE LINE # 296
008D         ?C0014:
008D 22                RET     
             ; FUNCTION _AMux_1_Set (END)

             ; FUNCTION _AMux_1_Unset (BEGIN)
                                           ; SOURCE LINE # 312
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 313
                                           ; SOURCE LINE # 314
0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 4003              JC      $ + 5H
0010 020000      R     LJMP    ?C0016
                                           ; SOURCE LINE # 315
                                           ; SOURCE LINE # 316
0013 900000      R     MOV     DPTR,#channel
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 900000      R     MOV     DPTR,#channel
001B E0                MOVX    A,@DPTR
001C 2F                ADD     A,R7
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 317
001E 900000      R     MOV     DPTR,#channel
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 EF                MOV     A,R7
0024 25E0              ADD     A,ACC
0026 2400        R     ADD     A,#LOW AMux_1__addrTable
0028 F582              MOV     DPL,A
002A E4                CLR     A
002B 3400        R     ADDC    A,#HIGH AMux_1__addrTable
002D F583              MOV     DPH,A
002F E4                CLR     A
0030 93                MOVC    A,@A+DPTR
0031 FE                MOV     R6,A
0032 7401              MOV     A,#01H
0034 93                MOVC    A,@A+DPTR
0035 FF                MOV     R7,A
0036 8F82              MOV     DPL,R7
0038 8E83              MOV     DPH,R6
003A C083              PUSH    DPH
003C C082              PUSH    DPL
003E E0                MOVX    A,@DPTR
003F FF                MOV     R7,A
0040 900000      R     MOV     DPTR,#channel
0043 E0                MOVX    A,@DPTR
0044 FE                MOV     R6,A
0045 EE                MOV     A,R6
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 18  

0046 900000      R     MOV     DPTR,#AMux_1__maskTable
0049 93                MOVC    A,@A+DPTR
004A FE                MOV     R6,A
004B EE                MOV     A,R6
004C F4                CPL     A
004D FE                MOV     R6,A
004E EF                MOV     A,R7
004F 5E                ANL     A,R6
0050 FF                MOV     R7,A
0051 D082              POP     DPL
0053 D083              POP     DPH
0055 EF                MOV     A,R7
0056 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 318
0057 900000      R     MOV     DPTR,#channel
005A E0                MOVX    A,@DPTR
005B 04                INC     A
005C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 319
005D 900000      R     MOV     DPTR,#channel
0060 E0                MOVX    A,@DPTR
0061 FF                MOV     R7,A
0062 EF                MOV     A,R7
0063 25E0              ADD     A,ACC
0065 2400        R     ADD     A,#LOW AMux_1__addrTable
0067 F582              MOV     DPL,A
0069 E4                CLR     A
006A 3400        R     ADDC    A,#HIGH AMux_1__addrTable
006C F583              MOV     DPH,A
006E E4                CLR     A
006F 93                MOVC    A,@A+DPTR
0070 FE                MOV     R6,A
0071 7401              MOV     A,#01H
0073 93                MOVC    A,@A+DPTR
0074 FF                MOV     R7,A
0075 8F82              MOV     DPL,R7
0077 8E83              MOV     DPH,R6
0079 C083              PUSH    DPH
007B C082              PUSH    DPL
007D E0                MOVX    A,@DPTR
007E FF                MOV     R7,A
007F 900000      R     MOV     DPTR,#channel
0082 E0                MOVX    A,@DPTR
0083 FE                MOV     R6,A
0084 EE                MOV     A,R6
0085 900000      R     MOV     DPTR,#AMux_1__maskTable
0088 93                MOVC    A,@A+DPTR
0089 FE                MOV     R6,A
008A EE                MOV     A,R6
008B F4                CPL     A
008C FE                MOV     R6,A
008D EF                MOV     A,R7
008E 5E                ANL     A,R6
008F FF                MOV     R7,A
0090 D082              POP     DPL
0092 D083              POP     DPH
0094 EF                MOV     A,R7
0095 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 320
                                           ; SOURCE LINE # 321
0096         ?C0016:
0096 22                RET     
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 19  

             ; FUNCTION _AMux_1_Unset (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 342
                                           ; SOURCE LINE # 343
                                           ; SOURCE LINE # 345
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 347
                                           ; SOURCE LINE # 382
0016 750000      R     MOV     i,#00H
0019         ?C0017:
0019 E500        R     MOV     A,i
001B C3                CLR     C
001C 9409              SUBB    A,#09H
001E 503A              JNC     ?C0018
                                           ; SOURCE LINE # 383
                                           ; SOURCE LINE # 384
0020 AF00        R     MOV     R7,i
0022 EF                MOV     A,R7
0023 75F005            MOV     B,#05H
0026 A4                MUL     AB
0027 2400        R     ADD     A,#LOW cfg_memset_list
0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        R     ADDC    A,#HIGH cfg_memset_list
002E F583              MOV     DPH,A
0030 AF82              MOV     R7,DPL
0032 AE83              MOV     R6,DPH
0034 8E00        R     MOV     ms,R6
0036 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 385
0038 AE00        R     MOV     R6,ms
003A AF00        R     MOV     R7,ms+01H
003C 8F82              MOV     DPL,R7
003E 8E83              MOV     DPH,R6
0040 120000      E     LCALL   ?C?PLDCODE
0043 AE00        R     MOV     R6,ms
0045 AF00        R     MOV     R7,ms+01H
0047 8F82              MOV     DPL,R7
0049 8E83              MOV     DPH,R6
004B 7403              MOV     A,#03H
004D 93                MOVC    A,@A+DPTR
004E FC                MOV     R4,A
004F 7404              MOV     A,#04H
0051 93                MOVC    A,@A+DPTR
0052 FD                MOV     R5,A
0053 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 386
0056 0500        R     INC     i
0058 80BF              SJMP    ?C0017
005A         ?C0018:
                                           ; SOURCE LINE # 389
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 20  

005A 750000      R     MOV     i,#00H
005D         ?C0020:
005D E500        R     MOV     A,i
005F C3                CLR     C
0060 9401              SUBB    A,#01H
0062 5078              JNC     ?C0021
                                           ; SOURCE LINE # 390
                                           ; SOURCE LINE # 391
0064 AF00        R     MOV     R7,i
0066 EF                MOV     A,R7
0067 75F008            MOV     B,#08H
006A A4                MUL     AB
006B 2400        R     ADD     A,#LOW cfg_memcpy_list
006D F582              MOV     DPL,A
006F E4                CLR     A
0070 3400        R     ADDC    A,#HIGH cfg_memcpy_list
0072 F583              MOV     DPH,A
0074 AF82              MOV     R7,DPL
0076 AE83              MOV     R6,DPH
0078 8E00        R     MOV     mc,R6
007A 8F00        R     MOV     mc+01H,R7
                                           ; SOURCE LINE # 392
007C AE00        R     MOV     R6,mc
007E AF00        R     MOV     R7,mc+01H
0080 8F82              MOV     DPL,R7
0082 8E83              MOV     DPH,R6
0084 120000      E     LCALL   ?C?PLDCODE
0087 8B00        R     MOV     destPtr,R3
0089 8A00        R     MOV     destPtr+01H,R2
008B 8900        R     MOV     destPtr+02H,R1
                                           ; SOURCE LINE # 393
008D AE00        R     MOV     R6,mc
008F AF00        R     MOV     R7,mc+01H
0091 8F82              MOV     DPL,R7
0093 8E83              MOV     DPH,R6
0095 A3                INC     DPTR
0096 A3                INC     DPTR
0097 A3                INC     DPTR
0098 120000      E     LCALL   ?C?PLDCODE
009B 8B00        R     MOV     srcPtr,R3
009D 8A00        R     MOV     srcPtr+01H,R2
009F 8900        R     MOV     srcPtr+02H,R1
                                           ; SOURCE LINE # 394
00A1 AE00        R     MOV     R6,mc
00A3 AF00        R     MOV     R7,mc+01H
00A5 8F82              MOV     DPL,R7
00A7 8E83              MOV     DPH,R6
00A9 7406              MOV     A,#06H
00AB 93                MOVC    A,@A+DPTR
00AC F500        R     MOV     numBytes,A
00AE 7407              MOV     A,#07H
00B0 93                MOVC    A,@A+DPTR
00B1 F500        R     MOV     numBytes+01H,A
                                           ; SOURCE LINE # 395
00B3 AB00        R     MOV     R3,srcPtr
00B5 AA00        R     MOV     R2,srcPtr+01H
00B7 A900        R     MOV     R1,srcPtr+02H
00B9 C003              PUSH    AR3
00BB C002              PUSH    AR2
00BD C001              PUSH    AR1
00BF AB00        R     MOV     R3,destPtr
00C1 AA00        R     MOV     R2,destPtr+01H
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 21  

00C3 A900        R     MOV     R1,destPtr+02H
00C5 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00C8 120000      E     LCALL   ?C?PSTXDATA
00CB D001              POP     AR1
00CD D002              POP     AR2
00CF D003              POP     AR3
00D1 AF00        R     MOV     R7,numBytes+01H
00D3 AE00        R     MOV     R6,numBytes
00D5 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 396
00D8 0500        R     INC     i
00DA 8081              SJMP    ?C0020
00DC         ?C0021:
                                           ; SOURCE LINE # 398
00DC 7B08              MOV     R3,#08H
00DE 7A00              MOV     R2,#00H
00E0 7900              MOV     R1,#00H
00E2 120000      E     LCALL   _cfg_write_bytes
                                           ; SOURCE LINE # 401
00E5 905883            MOV     DPTR,#05883H
00E8 740A              MOV     A,#0AH
00EA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 402
00EB 7B00              MOV     R3,#00H
00ED 7A76              MOV     R2,#076H
00EF 7950              MOV     R1,#050H
00F1 7D04              MOV     R5,#04H
00F3 7C00              MOV     R4,#00H
00F5 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 403
00F8 7B08              MOV     R3,#08H
00FA 7A04              MOV     R2,#04H
00FC 792C              MOV     R1,#02CH
00FE C003              PUSH    AR3
0100 C002              PUSH    AR2
0102 C001              PUSH    AR1
0104 7B00              MOV     R3,#00H
0106 7A76              MOV     R2,#076H
0108 7940              MOV     R1,#040H
010A 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
010D 120000      E     LCALL   ?C?PSTXDATA
0110 D001              POP     AR1
0112 D002              POP     AR2
0114 D003              POP     AR3
0116 7F04              MOV     R7,#04H
0118 7E00              MOV     R6,#00H
011A 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 406
011D 7B01              MOV     R3,#01H
011F 7A50              MOV     R2,#050H
0121 7903              MOV     R1,#03H
0123 120000      E     LCALL   _cyread8
0126 EF                MOV     A,R7
0127 4402              ORL     A,#02H
0129 FD                MOV     R5,A
012A 7B01              MOV     R3,#01H
012C 7A50              MOV     R2,#050H
012E 7903              MOV     R1,#03H
0130 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 407
0133 7B01              MOV     R3,#01H
0135 7A50              MOV     R2,#050H
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 22  

0137 7913              MOV     R1,#013H
0139 120000      E     LCALL   _cyread8
013C EF                MOV     A,R7
013D 4402              ORL     A,#02H
013F FD                MOV     R5,A
0140 7B01              MOV     R3,#01H
0142 7A50              MOV     R2,#050H
0144 7913              MOV     R1,#013H
0146 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 410
0149 9043A0            MOV     DPTR,#043A0H
014C E0                MOVX    A,@DPTR
014D FF                MOV     R7,A
014E EF                MOV     A,R7
014F 4440              ORL     A,#040H
0151 FF                MOV     R7,A
0152 9043A0            MOV     DPTR,#043A0H
0155 EF                MOV     A,R7
0156 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 411
0157 9043C2            MOV     DPTR,#043C2H
015A E0                MOVX    A,@DPTR
015B FF                MOV     R7,A
015C EF                MOV     A,R7
015D 4410              ORL     A,#010H
015F FF                MOV     R7,A
0160 9043C2            MOV     DPTR,#043C2H
0163 EF                MOV     A,R7
0164 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 412
                                           ; SOURCE LINE # 415
0165 7B08              MOV     R3,#08H
0167 7A04              MOV     R2,#04H
0169 7900              MOV     R1,#00H
016B C003              PUSH    AR3
016D C002              PUSH    AR2
016F C001              PUSH    AR1
0171 7B00              MOV     R3,#00H
0173 7A51              MOV     R2,#051H
0175 7902              MOV     R1,#02H
0177 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
017A 120000      E     LCALL   ?C?PSTXDATA
017D D001              POP     AR1
017F D002              POP     AR2
0181 D003              POP     AR3
0183 7F08              MOV     R7,#08H
0185 7E00              MOV     R6,#00H
0187 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 416
018A 7B08              MOV     R3,#08H
018C 7A04              MOV     R2,#04H
018E 7908              MOV     R1,#08H
0190 C003              PUSH    AR3
0192 C002              PUSH    AR2
0194 C001              PUSH    AR1
0196 7B00              MOV     R3,#00H
0198 7A51              MOV     R2,#051H
019A 79C2              MOV     R1,#0C2H
019C 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
019F 120000      E     LCALL   ?C?PSTXDATA
01A2 D001              POP     AR1
01A4 D002              POP     AR2
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 23  

01A6 D003              POP     AR3
01A8 7F08              MOV     R7,#08H
01AA 7E00              MOV     R6,#00H
01AC 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 417
01AF 7B08              MOV     R3,#08H
01B1 7A04              MOV     R2,#04H
01B3 7910              MOV     R1,#010H
01B5 C003              PUSH    AR3
01B7 C002              PUSH    AR2
01B9 C001              PUSH    AR1
01BB 7B00              MOV     R3,#00H
01BD 7A51              MOV     R2,#051H
01BF 7922              MOV     R1,#022H
01C1 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
01C4 120000      E     LCALL   ?C?PSTXDATA
01C7 D001              POP     AR1
01C9 D002              POP     AR2
01CB D003              POP     AR3
01CD 7F08              MOV     R7,#08H
01CF 7E00              MOV     R6,#00H
01D1 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 418
01D4 7B08              MOV     R3,#08H
01D6 7A04              MOV     R2,#04H
01D8 7918              MOV     R1,#018H
01DA C003              PUSH    AR3
01DC C002              PUSH    AR2
01DE C001              PUSH    AR1
01E0 7B00              MOV     R3,#00H
01E2 7A51              MOV     R2,#051H
01E4 7942              MOV     R1,#042H
01E6 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
01E9 120000      E     LCALL   ?C?PSTXDATA
01EC D001              POP     AR1
01EE D002              POP     AR2
01F0 D003              POP     AR3
01F2 7F08              MOV     R7,#08H
01F4 7E00              MOV     R6,#00H
01F6 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 419
01F9 7B08              MOV     R3,#08H
01FB 7A04              MOV     R2,#04H
01FD 7920              MOV     R1,#020H
01FF C003              PUSH    AR3
0201 C002              PUSH    AR2
0203 C001              PUSH    AR1
0205 7B00              MOV     R3,#00H
0207 7A51              MOV     R2,#051H
0209 7962              MOV     R1,#062H
020B 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
020E 120000      E     LCALL   ?C?PSTXDATA
0211 D001              POP     AR1
0213 D002              POP     AR2
0215 D003              POP     AR3
0217 7F08              MOV     R7,#08H
0219 7E00              MOV     R6,#00H
021B 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 420
021E 9044F4            MOV     DPTR,#044F4H
0221 7401              MOV     A,#01H
0223 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 24  

                                           ; SOURCE LINE # 423
0224 904322            MOV     DPTR,#04322H
0227 E0                MOVX    A,@DPTR
0228 FF                MOV     R7,A
0229 EF                MOV     A,R7
022A 4408              ORL     A,#08H
022C FF                MOV     R7,A
022D 904322            MOV     DPTR,#04322H
0230 EF                MOV     A,R7
0231 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 424
0232 9046EC            MOV     DPTR,#046ECH
0235 E0                MOVX    A,@DPTR
0236 FF                MOV     R7,A
0237 EF                MOV     A,R7
0238 C3                CLR     C
0239 9405              SUBB    A,#05H
023B 5006              JNC     ?C0023
                                           ; SOURCE LINE # 425
                                           ; SOURCE LINE # 426
023D 904689            MOV     DPTR,#04689H
0240 743A              MOV     A,#03AH
0242 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 427
0243         ?C0023:
                                           ; SOURCE LINE # 431
0243 904800            MOV     DPTR,#04800H
0246 74F1              MOV     A,#0F1H
0248 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 433
0249 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 435
024C 904800            MOV     DPTR,#04800H
024F 74B1              MOV     A,#0B1H
0251 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 438
0252 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 441
0255 7B00              MOV     R3,#00H
0257 7A43              MOV     R2,#043H
0259 79A0              MOV     R1,#0A0H
025B C003              PUSH    AR3
025D C002              PUSH    AR2
025F C001              PUSH    AR1
0261 7B00              MOV     R3,#00H
0263 7A43              MOV     R2,#043H
0265 79B0              MOV     R1,#0B0H
0267 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
026A 120000      E     LCALL   ?C?PSTXDATA
026D D001              POP     AR1
026F D002              POP     AR2
0271 D003              POP     AR3
0273 7F0E              MOV     R7,#0EH
0275 7E00              MOV     R6,#00H
0277 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 442
027A 9043B0            MOV     DPTR,#043B0H
027D E0                MOVX    A,@DPTR
027E FF                MOV     R7,A
027F EF                MOV     A,R7
0280 54FD              ANL     A,#0FDH
0282 FF                MOV     R7,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          12/19/2013 21:53:05 PAGE 25  

0283 EF                MOV     A,R7
0284 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 443
0285 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1510    ----
   CONSTANT SIZE    =     65    ----
   XDATA SIZE       =   ----      11
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
